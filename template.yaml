AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Ascenda Template

Globals:
  Function:
    MemorySize: 512
    Architectures: ["arm64"]
    Handler: bootstrap
    Runtime: provided.al2
    Timeout: 5

Resources:

  AscendaApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: Prod
      CorsConfiguration:
        AllowMethods: ['GET', 'POST', 'PUT', 'DELETE']
        AllowHeaders: ['Content-Type', 'X-Amz-Date', 'Authorization', 'X-Api-Key', 'X-Amz-Security-Token']
        AllowOrigins: ['*']
      Auth:
        DefaultAuthorizer: Lambda-Authorizer
        Authorizers:
          Lambda-Authorizer:
            AuthorizerPayloadFormatVersion: 2.0
            FunctionArn: !GetAtt LambdaAuthorizer.Arn
            FunctionInvokeRole: arn:aws:iam::163683790602:role/api_gateway_auth_invocation
            Identity:
              Headers:
                - Authorization
              ReauthorizeEvery: 300
            EnableSimpleResponses: true
      Domain:
        DomainName: itsag2t2.com
        CertificateArn: arn:aws:acm:ap-southeast-1:163683790602:certificate/17266c11-0d22-4f17-b63f-92e2227151c1
        Route53:
          HostedZoneId: Z01378052RMMURP5MHP9D
          EvaluateTargetHealth: false

  LambdaAuthorizer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/administrative/lambda-authorizer/
      Handler: bootstrap
      Role: arn:aws:iam::163683790602:role/AscendaUserLambdaRole
    Metadata:
      BuildMethod: makefile

  GetMakerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/maker/get-makers/
      Role: arn:aws:iam::163683790602:role/AscendaMakerLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /makers
            Method: GET
    Metadata:
      BuildMethod: makefile

  CreateMakerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/maker/create-makers/
      Role: arn:aws:iam::163683790602:role/AscendaMakerLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /makers
            Method: POST
    Metadata:
      BuildMethod: makefile

  GetCheckerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/maker/get-checkers/
      Role: arn:aws:iam::163683790602:role/AscendaMakerLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /checkers
            Method: GET
    Metadata:
      BuildMethod: makefile
  
  UpdateCheckerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/maker/update-checkers/
      Role: arn:aws:iam::163683790602:role/AscendaMakerLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /checkers
            Method: PUT
    Metadata:
      BuildMethod: makefile

  GetPointsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/point/get-points/
      Role: arn:aws:iam::163683790602:role/AscendaLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /points
            Method: GET
    Metadata:
      BuildMethod: makefile

  UpdatePointsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/point/update-points/
      Role: arn:aws:iam::163683790602:role/AscendaLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /points
            Method: PUT
    Metadata:
      BuildMethod: makefile
  
  CreatePointsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/point/create-points/
      Role: arn:aws:iam::163683790602:role/AscendaLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /points
            Method: POST
    Metadata:
      BuildMethod: makefile

  GetUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/user/get-users/
      Role: arn:aws:iam::163683790602:role/AscendaLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /users
            Method: GET
    Metadata:
      BuildMethod: makefile

  CreateUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/user/create-users/
      Role: arn:aws:iam::163683790602:role/AscendaCreateUserLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /users
            Method: POST
    Metadata:
      BuildMethod: makefile

  UpdateUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/user/update-users/
      Role: arn:aws:iam::163683790602:role/AscendaUserLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /users
            Method: PUT
    Metadata:
      BuildMethod: makefile

  DeleteUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/user/delete-users/
      Role: arn:aws:iam::163683790602:role/AscendaUserLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /users
            Method: DELETE
    Metadata:
      BuildMethod: makefile

  GetLogsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/administrative/get-logs/
      Role: arn:aws:iam::163683790602:role/AscendaLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /logs
            Method: GET
    Metadata:
      BuildMethod: makefile

  GetRolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/role/get-roles/
      Role: arn:aws:iam::163683790602:role/AscendaLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /roles
            Method: GET
    Metadata:
      BuildMethod: makefile

  CreateRolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/role/create-roles/
      Role: arn:aws:iam::163683790602:role/AscendaLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /roles
            Method: POST
    Metadata:
      BuildMethod: makefile

  UpdateRolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/role/update-roles/
      Role: arn:aws:iam::163683790602:role/AscendaLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /roles
            Method: PUT
    Metadata:
      BuildMethod: makefile

  DeleteRolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/role/delete-roles/
      Role: arn:aws:iam::163683790602:role/AscendaLambdaRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref AscendaApi
            Path: /roles
            Method: DELETE
    Metadata:
      BuildMethod: makefile

Outputs:
  AscendaAPI:
    Description: "API Gateway ID"
    Value: !Ref AscendaApi
