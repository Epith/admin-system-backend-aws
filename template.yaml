AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Ascenda Template

Globals:
  Function:
    MemorySize: 256
    Architectures: ["arm64"]
    Handler: bootstrap
    Runtime: provided.al2
    Timeout: 5

Resources:
  GetPointsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-points/
      Role: arn:aws:iam::163683790602:role/DynamoDBAccessRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /points
            Method: GET
      Environment: 
        Variables:
          POINTS_TABLE: points
          LOGS_TABLE: logs
    Metadata:
      BuildMethod: makefile

  UpdatePointsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/update-points/
      Role: arn:aws:iam::163683790602:role/DynamoDBAccessRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /points
            Method: PUT
      Environment: 
        Variables:
          POINTS_TABLE: points
          LOGS_TABLE: logs
    Metadata:
      BuildMethod: makefile
  
  CreatePointsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/create-points/
      Role: arn:aws:iam::163683790602:role/DynamoDBAccessRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /points
            Method: POST
      Environment: 
        Variables:
          POINTS_TABLE: points
          USER_TABLE: users
          LOGS_TABLE: logs
    Metadata:
      BuildMethod: makefile

  GetUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-users/
      Role: arn:aws:iam::163683790602:role/DynamoDBAccessRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /users
            Method: GET
      Environment: 
        Variables:
            USER_TABLE: users
            LOGS_TABLE: logs
    Metadata:
      BuildMethod: makefile

  CreateUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/create-users/
      Role: arn:aws:iam::163683790602:role/DynamoDBAccessRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /users
            Method: POST
      Environment: 
        Variables:
            USER_TABLE: users
            LOGS_TABLE: logs
    Metadata:
      BuildMethod: makefile

  UpdateUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/update-users/
      Role: arn:aws:iam::163683790602:role/DynamoDBAccessRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /users
            Method: PUT
      Environment: 
        Variables:
          USER_TABLE: users
          LOGS_TABLE: logs
    Metadata:
      BuildMethod: makefile

  DeleteUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/delete-users/
      Role: arn:aws:iam::163683790602:role/DynamoDBAccessRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /users
            Method: DELETE
      Environment: 
        Variables:
          USER_TABLE: users
          LOGS_TABLE: logs
    Metadata:
      BuildMethod: makefile

  GetLogsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-logs/
      Role: arn:aws:iam::163683790602:role/DynamoDBAccessRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /logs
            Method: GET
      Environment: 
        Variables:
            LOGS_TABLE: logs
    Metadata:
      BuildMethod: makefile

  GetRolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-roles/
      Role: arn:aws:iam::163683790602:role/DynamoDBAccessRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /roles
            Method: GET
      Environment: 
        Variables:
            ROLES_TABLE: roles
            LOGS_TABLE: logs
    Metadata:
      BuildMethod: makefile

  CreateRolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/create-roles/
      Role: arn:aws:iam::163683790602:role/DynamoDBAccessRole
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /roles
            Method: POST
      Environment: 
        Variables:
            ROLES_TABLE: roles
            LOGS_TABLE: logs
    Metadata:
      BuildMethod: makefile

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  AscendaAPI:
    Description: "API Gateway endpoint URL for Prod environment"
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com"
